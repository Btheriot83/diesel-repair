---
interface Props {
  src: string;
  alt: string;
  width: number;
  height: number;
  /**
   * Optional intrinsic display width in CSS pixels for sizes attribute.
   * Default targets full-bleed on mobile then caps at 1280px.
   */
  sizes?: string;
  class?: string;
}
const {
  src,
  alt,
  width,
  height,
  sizes = "(max-width: 640px) 100vw, (max-width: 1280px) 90vw, 1280px",
  class: className = "block w-full h-auto",
} = Astro.props;
---
<!--
  HeroLCP: zero-CLS, LCP-friendly hero image with modern format support
  - Responsive <picture> with AVIF/WebP/fallback (using optimized responsive images)
  - Explicit width/height to reserve space (CLS=0)
  - loading='eager' + fetchpriority='high' to prioritize for LCP
  - decoding='async' to avoid main-thread jank
  - Responsive 'sizes' to hint correct candidate
-->
<picture>
  <source
    srcset="/images/hero-optimized/hero-1200w.avif 1200w, /images/hero-optimized/hero-1600w.avif 1600w, /images/hero-optimized/hero-2000w.avif 2000w"
    type="image/avif"
    sizes={sizes}
  />
  <source
    srcset="/images/hero-optimized/hero-1200w.webp 1200w, /images/hero-optimized/hero-1600w.webp 1600w, /images/hero-optimized/hero-2000w.webp 2000w"
    type="image/webp"
    sizes={sizes}
  />
  <img
    src={src}
    alt={alt}
    width={width}
    height={height}
    loading="eager"
    decoding="async"
    fetchpriority="high"
    sizes={sizes}
    class={className}
    style="aspect-ratio: 1/1"
  />
</picture>
